# Default values for strapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#Since this chart should use shared file and data stores you should be able to up the replicas if needed.
replicaCount: 1

#Had to make a kubernetes happy version of the strapi docker image.  Look here: https://github.com/ryuheiyokokawa/strapi-docker
#Might have to host your own registry.  I based above on this: https://github.com/strapi/strapi-docker/strapi/
image:
  repository: strapi
  name: strapi
  tag: latest
  pullPolicy: IfNotPresent

#Registry credentials 
#imagePullSecrets: 
#  - name: regcred
nameOverride: ""
fullnameOverride: ""

storage:
#Used NFS as a datastore for this project since I already had a server running.
#  nfs:
#    server: "nfs.default.com"
#    path: "/srv/strapi-store"
  size: "10Gi"
  accessMode: "ReadWriteOnce"
  reclaimPolicy: "Delete"
  scName: "gp2"

#Strapi wants to know how its going to be exposed to the outside world through a proxy.
proxy:
  enabled: true
  ssl: true
  domain: "strapi.domain.com"
  port: 443

#RDS or similar can be used here obviously.  Look at strapi's docs for more options: 
#https://strapi.io/documentation/3.0.0-beta.x/concepts/configurations.html#database
db:
  client: mysql
  host: "localhost"
  name: strapi
  pass: "strapi-sql-pass"
  port: "3306"
  username: strapi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: 

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: LoadBalancer
  port: 1337
  annotations: []
  type: LoadBalancer
  port: 80
  targetPort: 3000
  loadBalancerSourceRanges: []

#Make sure to set your host
ingress:
  enabled: false
  hosts:
    - host: "strapi.domain.com"
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
