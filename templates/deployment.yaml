apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "strapi.fullname" . }}
  labels:
    {{- include "strapi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "strapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "strapi.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "strapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: strapi-volume-claim
          persistentVolumeClaim:
            claimName: strapi-volume-claim
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          terminationMessagePath: "/tmp/my-log"
          volumeMounts:
            - name: strapi-volume-claim
              mountPath: /srv/app
          ports:
            - containerPort: 1337
          livenessProbe:
            httpGet:
              path: /
              port: 1337
          readinessProbe:
            httpGet:
              path: /
              port: 1337
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
          - configMapRef:
              name: strapi-config
          - secretRef:
              name: strapi-db-secret
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
